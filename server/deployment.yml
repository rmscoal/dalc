# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  server-app-deployment
  namespace: default
  labels:
    app:  server-app
spec:
  selector:
    matchLabels:
      app: server-app
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  server-app
    spec:
      restartPolicy: Always

      ##############
      # CONTAINERS #
      ##############
      containers:
      - name:  server-app
        image:  rmscoal/dalc-server-app:v0.0.2

        ################
        # ENVIRONMENTS #
        ################
        env:
          # DATABASE ENVIRONMENTS
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: dalc-secret
              key: db_username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dalc-secret
              key: db_password
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: dalc-cm
              key: db_host
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: dalc-cm
              key: db_name
        - name: DB_SSLMODE
          value: "disable"
          # RABBITMQ ENVIRONMENTS
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: dalc-secret
              key: rabbitmq_username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dalc-secret
              key: rabbitmq_password
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: dalc-cm
              key: rabbitmq_host
        - name: RABBITMQ_VIRTUAL_HOST
          value: "/"
          # SERVER ENVIRONMENTS
        - name:  SERVER_HOST 
          value: "0.0.0.0"
        - name:  SERVER_PORT
          value: "8080"
        ports:
        - containerPort:  8080
          name:  server-app
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: server-app-service
  namespace: default
spec:
  selector:
    app: server-app-service
  type: NodePort
  ports:
  - name: server-app-service
    protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 30001
---
